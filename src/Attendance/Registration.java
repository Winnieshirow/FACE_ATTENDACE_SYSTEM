/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Attendance;

import com.googlecode.javacv.CanvasFrame;
import com.googlecode.javacv.FFmpegFrameRecorder;
import com.googlecode.javacv.FrameGrabber;
import com.googlecode.javacv.FrameRecorder;
import com.googlecode.javacv.OpenCVFrameGrabber;
import com.googlecode.javacv.cpp.avutil;
import com.googlecode.javacv.cpp.opencv_core.IplImage;
import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.MessageDigest;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.awt.Image;
import java.awt.image.BufferedImage;
import static com.googlecode.javacv.cpp.opencv_highgui.cvSaveImage;
import org.opencv.core.Core;

/**
 *
 * @author shirow
 */
public class Registration extends javax.swing.JFrame {
    private static final int IMG_WIDTH = 120;
    private static final int IMG_HEIGHT = 120;
    JLabel label;
    ImageIcon photo;
    WritableRaster raster;
    DataBufferByte data;
    File snapshot;
    Connection conn = null; // connection to the database
    ResultSet rs = null;
    PreparedStatement pst = null;
    String filePath=null;

    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
        validatetextfield();
        
    }
    private boolean check() {
        if(filePath!=null) 
        {
        if(filePath.endsWith(".jpeg")||filePath.endsWith(".gif")||filePath.endsWith(".jpg")||filePath.endsWith(".JPEG")||filePath.endsWith(".png")||filePath.endsWith(".GIF")||filePath.endsWith(".JPG"))
        {
        return true;
        }
        return false;
        }
        return false;
       }
    private void validatetextfield(){
        firstname.addKeyListener(new KeyAdapter(){
			public void keyTyped(KeyEvent e){
				char ch = e.getKeyChar();
				if(Character.isDigit(ch)){
					firstname.setText("");
					JOptionPane.showMessageDialog(null, "Input characters only!");
                                        firstname.setText("");
                                }
			}

			
		});
        lastname.addKeyListener(new KeyAdapter(){
			public void keyTyped(KeyEvent e){
				char ch = e.getKeyChar();
				if(Character.isDigit(ch)){
					lastname.setText("");
					JOptionPane.showMessageDialog(null, "Input characters only!");
                                        lastname.setText("");
				}
			}

			
		});

    } 
    
    public static boolean reg_validation(String registration_number)
    {
        boolean status = false;
        
        String registration_number_pattern = "^[Pp][0-9]{1}[0-9]{1}(\\/[0-9]{4,5})(\\/[12][0-9]{1}[0-9]{2})$";
        Pattern pattern = Pattern.compile(registration_number_pattern);
        Matcher matcher = pattern.matcher(registration_number);
        
        if (matcher.matches()){
            status = true;
        }
        else{
            status = false;
        }
        return status;
    }
    public static boolean text_validation(String firstname)
    {
        boolean status1 = false;
        
        String firstname_pattern = "^[a-zA-Z]+$";
        Pattern pattern = Pattern.compile(firstname_pattern);
        Matcher matcher = pattern.matcher(firstname);
        
        if (matcher.matches()){
            status1 = true;
        }
        else{
            status1 = false;
        }
        return status1;
    }
     public static boolean lastname_validation(String lastname)
    {
        boolean status2 = false;
        
        String lastname_pattern = "^[a-zA-Z]+$";
        Pattern pattern = Pattern.compile(lastname_pattern);
        Matcher matcher = pattern.matcher(lastname);
        
        if (matcher.matches()){
            status2 = true;
        }
        else{
            status2 = false;
        }
        return status2;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TITLE1 = new javax.swing.JLabel();
        TITLE2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        submitbtn = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        browsebtn = new javax.swing.JButton();
        txt_path = new javax.swing.JLabel();
        login = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        registration_number = new javax.swing.JTextField();
        firstname = new javax.swing.JTextField();
        lastname = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        cpassword = new javax.swing.JPasswordField();
        snap = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TITLE1.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        TITLE1.setText("BIOMETRIC FACE RECOGNITION ATENDANCE SYSTEM");

        TITLE2.setFont(new java.awt.Font("SansSerif", 2, 15)); // NOI18N
        TITLE2.setText("REGISTRATION FORM");

        jLabel3.setText("Registration number");

        jLabel4.setText("Firstname");

        jLabel5.setText("Lastname");

        jLabel6.setText("Upload photos");

        jLabel7.setText("Password");

        jLabel8.setText("Confirm pasword");

        submitbtn.setFont(new java.awt.Font("SansSerif", 2, 15)); // NOI18N
        submitbtn.setText("Save");
        submitbtn.setToolTipText("click to save into database");
        submitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbtnActionPerformed(evt);
            }
        });

        clearbtn.setFont(new java.awt.Font("SansSerif", 2, 15)); // NOI18N
        clearbtn.setText("Clear");
        clearbtn.setToolTipText("click to clear all textfields");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });

        browsebtn.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        browsebtn.setText("Browse");
        browsebtn.setToolTipText("Input any of your photo");
        browsebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsebtnActionPerformed(evt);
            }
        });

        login.setFont(new java.awt.Font("SansSerif", 2, 15)); // NOI18N
        login.setText("Login");
        login.setToolTipText("click to login if already registered");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("SansSerif", 2, 15)); // NOI18N
        jButton1.setText("Home Page");
        jButton1.setToolTipText("click to navigate to home page");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        registration_number.setToolTipText("Enter in this format :: p15/35037/2014");

        firstname.setToolTipText("Enter your firstname");

        lastname.setToolTipText("Enter your lastname");

        password.setToolTipText("password with characters and numbers");

        cpassword.setToolTipText("Input your previous password");

        snap.setBorder(new javax.swing.border.MatteBorder(null));

        jButton2.setFont(new java.awt.Font("SansSerif", 2, 15)); // NOI18N
        jButton2.setText("Create your training data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(TITLE1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(TITLE2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(205, 205, 205)
                            .addComponent(submitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(62, 62, 62)
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(109, 109, 109)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5))
                                    .addGap(96, 96, 96)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(registration_number)
                                        .addComponent(firstname)
                                        .addComponent(lastname, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(27, 27, 27)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(243, 243, 243)
                                            .addComponent(browsebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txt_path, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(snap, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(404, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(TITLE1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(TITLE2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(registration_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(snap, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browsebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(txt_path, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(password)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(login))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
            registration_number.setText("");
            firstname.setText("");
            lastname.setText("");
            password.setText("");
            cpassword.setText("");
            txt_path.setText("");
            snap.setText("");
    }//GEN-LAST:event_clearbtnActionPerformed

    private void submitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbtnActionPerformed
           if (evt.getSource() == submitbtn)
         {  
           
            String s1 = registration_number.getText();
            String s2 = firstname.getText();
            String s3 = lastname.getText();
            String s11 = txt_path.getText();
 
            char[] s4 = password.getPassword();
            char[] s5 = cpassword.getPassword(); 
            String s7 = new String(s4);
            String s8 = new String(s5);
          
            
            if ("".equals(s1))
            {
                JOptionPane.showMessageDialog(submitbtn, "INPUT YOUR REGISTRATION NUMBER");
            }
            else if ("".equals(s2))
            {
                JOptionPane.showMessageDialog(submitbtn, "INPUT YOUR FIRSTNAME");
            }
            else if ("".equals(s3))
            {
                JOptionPane.showMessageDialog(submitbtn, "INPUT YOUR LASTNAME");
            }
            else if ("".equals(s11))
            {
                JOptionPane.showMessageDialog(submitbtn, "CHOOSE A PHOTO");
            }
            else if ("".equals(s7))
            {
                JOptionPane.showMessageDialog(submitbtn, "INPUT YOUR PASSWORD");
            }
            else if ("".equals(s8))
            {
                JOptionPane.showMessageDialog(submitbtn, "RE-WRITE YOUR PASSWORD");
            }
            
            else{
                
           boolean status = reg_validation(registration_number.getText());
           if(status){
              
               boolean status1 = text_validation(firstname.getText());
                    if (status1)
                    {
                         boolean status2 = lastname_validation(lastname.getText());
                    if (status2)
                    {
                        
                        if (s7.equals(s8))
                    {
                        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost/user_info", "root", "shirow12");
            pst = conn.prepareStatement("SELECT `registration_number` FROM `student` WHERE `registration_number` = ? ");
            pst.setString(1, registration_number.getText());
            
            ResultSet result = pst.executeQuery();
            if(result.next()){
                JOptionPane.showMessageDialog(null, "Registration number already exists!");
            }
            else{
               try
                    {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/user_info", "root", "shirow12");
                    String sql="INSERT INTO student(registration_number,firstname,lastname,password,snapshot) values(?,?,?,?,?)";
                    PreparedStatement ps = con.prepareStatement(sql);
                  if(filePath!=null && check())
                  {
                    FileInputStream fileInputStream=new FileInputStream(filePath);
                    byte b[]=new byte[fileInputStream.available()];
                    fileInputStream.read(b);
                    fileInputStream.close();
                    ps.setString(1, s1);
                    ps.setString(2, s2);
                    ps.setString(3, s3);
                    
                    if (md5(s4).equals(""))
                    {
                        JOptionPane.showMessageDialog(this, "Cannot encrypte your password, ERROR RAISED!");
                        return;
                    }
                    ps.setString(4, md5(s4));
                    ps.setBytes(5, b);
                    
                   int row = ps.executeUpdate();
                if (row > 0) {
                   JOptionPane.showMessageDialog(submitbtn, "Data Saved Successfully");
                   dispose();
                    new login().setVisible(true); 
                        }
                     else {
                         JOptionPane.showMessageDialog(submitbtn, "error!!!");
                            }
             
                     }
                  else
                          {
                JOptionPane.showMessageDialog(this,"Please select an Image of type .jpeg/gif/jpg...");
                        }
            
                  } catch (FileNotFoundException ex) {
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
                }
                           catch (ClassNotFoundException | SQLException | HeadlessException ex) 
                                {
                                    System.out.println("Found some error : " + ex);
                                     } catch (IOException ex) {
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
                }
                    }
                        }
                 catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, evt);
            
                    }
            registration_number.setText("");
            firstname.setText("");
            lastname.setText("");
            password.setText("");
            cpassword.setText("");
            txt_path.setText("");
            snap.setText("");
           }
                else
                    {
                JOptionPane.showMessageDialog(submitbtn, "Password Does Not Match");
                    } 
                    }
                    else{
                       JOptionPane.showMessageDialog(submitbtn, "INPUT ONLY CHARACTERS IN LASTNAME TEXTFIELD"); 
                    }
                    }
                    else{
                       JOptionPane.showMessageDialog(submitbtn, "INPUT ONLY CHARACTERS IN FIRSTNAME TEXTFIELD"); 
                    }
             }
           else {
                    JOptionPane.showMessageDialog(submitbtn, "Registration number not in the right format");
                    
                    }
            }
            
    }//GEN-LAST:event_submitbtnActionPerformed
    }
    
    private void browsebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsebtnActionPerformed
        JFileChooser chooser=new JFileChooser(new File("E:\\"));

        chooser.setMultiSelectionEnabled(false);
        chooser.setVisible(true);

        chooser.showOpenDialog(this);

        File file=chooser.getSelectedFile();
        if(file!=null){filePath=file.getPath();}
        if(filePath!=null){
        txt_path.setText("File:"+" "+filePath);
        snap.setIcon(new ImageIcon(filePath));
        
        }
    }                                        
    public Image toImage(BufferedImage bufferedImage) {
        return Toolkit.getDefaultToolkit().createImage(bufferedImage.getSource());
    }//GEN-LAST:event_browsebtnActionPerformed

    private String md5(char[] c)
    {
        try{
            MessageDigest digs = MessageDigest.getInstance("MD5");
            
            digs.update((new String(c).getBytes("UTF8")));
            
            String str  = new String(digs.digest());
            
            return str;
        }
        catch(Exception ex){
        return"";
        }
    }
    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        dispose();
        new login().setVisible(true);
    }//GEN-LAST:event_loginActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        new Homemain().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         dispose();
        new trainingdata().setVisible(true);   
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TITLE1;
    private javax.swing.JLabel TITLE2;
    private javax.swing.JButton browsebtn;
    private javax.swing.JButton clearbtn;
    private javax.swing.JPasswordField cpassword;
    private javax.swing.JTextField firstname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField lastname;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField registration_number;
    private javax.swing.JLabel snap;
    private javax.swing.JButton submitbtn;
    private javax.swing.JLabel txt_path;
    // End of variables declaration//GEN-END:variables
}
